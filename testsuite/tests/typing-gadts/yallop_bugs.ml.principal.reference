
#                           Characters 212-216:
           let f (Refl : (a T.t, b T.t) eq) = (x :> b)
                  ^^^^
Error: This pattern matches values of type (a T.t, a T.t) eq
       but a pattern was expected which matches values of type
         (a T.t, b T.t) eq
#                         Characters 36-67:
  type (_, +_) eq = Refl : ('a, 'a) eq
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error: In this GADT definition, the variance of some parameter
       cannot be checked
#                     Characters 115-175:
  .......................................function
    | BoolLit, false -> false
    | IntLit , 6 -> false
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(IntLit, 0)
type 'a t = IntLit : int t | BoolLit : bool t
val check : 'a t * 'a -> bool = <fun>
#             Characters 91-180:
  .............................................function
    | {fst = BoolLit; snd = false} -> false
    | {fst = IntLit ; snd =  6} -> false
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
{fst=IntLit; snd=0}
type ('a, 'b) pair = { fst : 'a; snd : 'b; }
val check : ('a t, 'a) pair -> bool = <fun>
# 
